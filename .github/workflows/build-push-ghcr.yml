name: Build and push GHCR
on:
  push:
    branches: [release]
  workflow_dispatch:
    inputs:
      target:
        description: 'Target'
        required: true
        default: 'production'
        type: choice
        options:
          - 'production'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: serverpod-test
  IMAGE_DESCRIPTION: Serverpod test image
  IMAGE_VENDOR: ${{ github.repository_owner }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./${{ github.event.repository.name }}_server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create passwords file
        shell: bash
        env:
          SERVERPOD_PASSWORDS: ${{ secrets.SERVERPOD_PASSWORDS }}
        run: |
          pwd
          echo "$SERVERPOD_PASSWORDS" > config/passwords.yaml
          ls config/

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set release version
        run: |
          VER=$(cat ./${{ github.repository }}_server/pubspec.yaml | grep "version:" | cut -f 2 -d ":" | xargs)
          echo "APP_VERSION=$VER" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_VENDOR }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
            org.opencontainers.image.vendor=${{ env.IMAGE_VENDOR }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.APP_VERSION }},priority=50
            type=ref,event=branch
            type=raw,value=latest
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ github.event.repository.name }}_server
          file: ./${{ github.event.repository.name }}_server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
